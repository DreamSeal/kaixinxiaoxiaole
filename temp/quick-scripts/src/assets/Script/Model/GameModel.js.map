{"version":3,"sources":["assets/Script/Model/GameModel.js"],"names":["GameModel","cells","cellBgs","lastPos","cc","v2","cellTypeNum","cellCreateType","setCellTypeNum","i","GRID_WIDTH","j","GRID_HEIGHT","CellModel","flag","init","getRandomCellType","result","checkPoint","length","setXY","setStartXY","data","x","y","checkWithDirection","direction","queue","vis","push","front","point","cellModel","tmpX","tmpY","type","rowResult","call","colResult","newCellStatus","CELL_STATUS","BIRD","WRAP","LINE","COLUMN","tmp","concat","forEach","newEle","oldEle","printStr","console","log","pos","changeModels","effectsQueue","delta","Math","abs","curClickCell","lastClickCell","exchangeCell","result1","result2","curTime","pushToChangeModels","isCanBomb","status","COMMON","moveToAndBack","moveTo","ANITIME","TOUCH_MOVE","processCrush","cycleCount","bombModels","pos1","pos2","model1","model2","bombModel","newCellType","model","crushCell","createNewCell","processBomb","DIE","down","CELL_TYPE","setStatus","setVisible","newCheckPoint","curRow","k","count","indexOf","cmd","tmpModel","num","createTypeList","CELL_BASENUM","index","floor","random","newBombModel","bombTime","BOMB_DELAY","addRowBomb","addColBomb","crushType","BOMB_BIRD_DELAY","playTime","step","action","needShake","toShake","shakeTime","DIE_SHAKE","toDie","addCrushEffect"],"mappings":"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","sourceRoot":"/","sourcesContent":["import CellModel from \"./CellModel\";\nimport { CELL_TYPE, CELL_BASENUM, CELL_STATUS, GRID_WIDTH, GRID_HEIGHT, ANITIME } from \"./ConstValue\";\n\nexport default class GameModel {\n    constructor() {\n        this.cells = null;\n        this.cellBgs = null;\n        this.lastPos = cc.v2(-1, -1);\n        this.cellTypeNum = 5;\n        this.cellCreateType = []; // 升成种类只在这个数组里面查找\n    }\n\n    init(cellTypeNum) {\n        this.cells = [];\n        this.setCellTypeNum(cellTypeNum || this.cellTypeNum);\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            this.cells[i] = [];\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                this.cells[i][j] = new CellModel();\n            }\n        }\n\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                let flag = true;\n                while (flag) {\n                    flag = false;\n                    this.cells[i][j].init(this.getRandomCellType());\n                    let result = this.checkPoint(j, i)[0];\n                    if (result.length > 2) {\n                        flag = true;\n                    }\n                    this.cells[i][j].setXY(j, i);\n                    this.cells[i][j].setStartXY(j, i);\n                }\n            }\n        }\n\n    }\n\n    initWithData(data) {\n        // to do\n    }\n\n    checkPoint(x, y) {\n        let checkWithDirection = function (x, y, direction) {\n            let queue = [];\n            let vis = [];\n            vis[x + y * 9] = true;\n            queue.push(cc.v2(x, y));\n            let front = 0;\n            while (front < queue.length) {\n                //let direction = [cc.v2(0, -1), cc.v2(0, 1), cc.v2(1, 0), cc.v2(-1, 0)];\n                let point = queue[front];\n                let cellModel = this.cells[point.y][point.x];\n                front++;\n                if (!cellModel) {\n                    continue;\n                }\n                for (let i = 0; i < direction.length; i++) {\n                    let tmpX = point.x + direction[i].x;\n                    let tmpY = point.y + direction[i].y;\n                    if (tmpX < 1 || tmpX > 9\n                        || tmpY < 1 || tmpY > 9\n                        || vis[tmpX + tmpY * 9]\n                        || !this.cells[tmpY][tmpX]) {\n                        continue;\n                    }\n                    if (cellModel.type == this.cells[tmpY][tmpX].type) {\n                        vis[tmpX + tmpY * 9] = true;\n                        queue.push(cc.v2(tmpX, tmpY));\n                    }\n                }\n            }\n            return queue;\n        }\n        let rowResult = checkWithDirection.call(this, x, y, [cc.v2(1, 0), cc.v2(-1, 0)]);\n        let colResult = checkWithDirection.call(this, x, y, [cc.v2(0, -1), cc.v2(0, 1)]);\n        let result = [];\n        let newCellStatus = \"\";\n        if (rowResult.length >= 5 || colResult.length >= 5) {\n            newCellStatus = CELL_STATUS.BIRD;\n        }\n        else if (rowResult.length >= 3 && colResult.length >= 3) {\n            newCellStatus = CELL_STATUS.WRAP;\n        }\n        else if (rowResult.length >= 4) {\n            newCellStatus = CELL_STATUS.LINE;\n        }\n        else if (colResult.length >= 4) {\n            newCellStatus = CELL_STATUS.COLUMN;\n        }\n        if (rowResult.length >= 3) {\n            result = rowResult;\n        }\n        if (colResult.length >= 3) {\n            let tmp = result.concat();\n            colResult.forEach(function (newEle) {\n                let flag = false;\n                tmp.forEach(function (oldEle) {\n                    if (newEle.x == oldEle.x && newEle.y == oldEle.y) {\n                        flag = true;\n                    }\n                }, this);\n                if (!flag) {\n                    result.push(newEle);\n                }\n            }, this);\n        }\n        return [result, newCellStatus, this.cells[y][x].type];\n    }\n\n    printInfo() {\n        for (var i = 1; i <= 9; i++) {\n            var printStr = \"\";\n            for (var j = 1; j <= 9; j++) {\n                printStr += this.cells[i][j].type + \" \";\n            }\n            console.log(printStr);\n        }\n    }\n\n    getCells() {\n        return this.cells;\n    }\n    // controller调用的主要入口\n    // 点击某个格子\n    selectCell(pos) {\n        this.changeModels = [];// 发生改变的model，将作为返回值，给view播动作\n        this.effectsQueue = []; // 动物消失，爆炸等特效\n        var lastPos = this.lastPos;\n        var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);\n        if (delta != 1) { //非相邻格子， 直接返回\n            this.lastPos = pos;\n            return [[], []];\n        }\n        let curClickCell = this.cells[pos.y][pos.x]; //当前点击的格子\n        let lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格式\n        this.exchangeCell(lastPos, pos);\n        var result1 = this.checkPoint(pos.x, pos.y)[0];\n        var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];\n        this.curTime = 0; // 动画播放的当前时间\n        this.pushToChangeModels(curClickCell);\n        this.pushToChangeModels(lastClickCell);\n        let isCanBomb = (curClickCell.status != CELL_STATUS.COMMON && // 判断两个是否是特殊的动物\n            lastClickCell.status != CELL_STATUS.COMMON) ||\n            curClickCell.status == CELL_STATUS.BIRD ||\n            lastClickCell.status == CELL_STATUS.BIRD;\n        if (result1.length < 3 && result2.length < 3 && !isCanBomb) {//不会发生消除的情况\n            this.exchangeCell(lastPos, pos);\n            curClickCell.moveToAndBack(lastPos);\n            lastClickCell.moveToAndBack(pos);\n            this.lastPos = cc.v2(-1, -1);\n            return [this.changeModels];\n        }\n        else {\n            this.lastPos = cc.v2(-1, -1);\n            curClickCell.moveTo(lastPos, this.curTime);\n            lastClickCell.moveTo(pos, this.curTime);\n            var checkPoint = [pos, lastPos];\n            this.curTime += ANITIME.TOUCH_MOVE;\n            this.processCrush(checkPoint);\n            return [this.changeModels, this.effectsQueue];\n        }\n    }\n    // 消除\n    processCrush(checkPoint) {\n        let cycleCount = 0;\n        while (checkPoint.length > 0) {\n            let bombModels = [];\n            if (cycleCount == 0 && checkPoint.length == 2) { //特殊消除\n                let pos1 = checkPoint[0];\n                let pos2 = checkPoint[1];\n                let model1 = this.cells[pos1.y][pos1.x];\n                let model2 = this.cells[pos2.y][pos2.x];\n                if (model1.status == CELL_STATUS.BIRD || model2.status == CELL_STATUS.BIRD) {\n                    let bombModel = null;\n                    if (model1.status == CELL_STATUS.BIRD) {\n                        model1.type = model2.type;\n                        bombModels.push(model1);\n                    }\n                    else {\n                        model2.type = model1.type;\n                        bombModels.push(model2);\n                    }\n\n                }\n            }\n            for (var i in checkPoint) {\n                var pos = checkPoint[i];\n                if (!this.cells[pos.y][pos.x]) {\n                    continue;\n                }\n                var [result, newCellStatus, newCellType] = this.checkPoint(pos.x, pos.y);\n\n                if (result.length < 3) {\n                    continue;\n                }\n                for (var j in result) {\n                    var model = this.cells[result[j].y][result[j].x];\n                    this.crushCell(result[j].x, result[j].y, false, cycleCount);\n                    if (model.status != CELL_STATUS.COMMON) {\n                        bombModels.push(model);\n                    }\n                }\n                this.createNewCell(pos, newCellStatus, newCellType);\n\n            }\n            this.processBomb(bombModels, cycleCount);\n            this.curTime += ANITIME.DIE;\n            checkPoint = this.down();\n            cycleCount++;\n        }\n    }\n\n    //生成新cell\n    createNewCell(pos, status, type) {\n        if (status == \"\") {\n            return;\n        }\n        if (status == CELL_STATUS.BIRD) {\n            type = CELL_TYPE.BIRD\n        }\n        let model = new CellModel();\n        this.cells[pos.y][pos.x] = model\n        model.init(type);\n        model.setStartXY(pos.x, pos.y);\n        model.setXY(pos.x, pos.y);\n        model.setStatus(status);\n        model.setVisible(0, false);\n        model.setVisible(this.curTime, true);\n        this.changeModels.push(model);\n    }\n    // 下落\n    down() {\n        let newCheckPoint = [];\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                if (this.cells[i][j] == null) {\n                    var curRow = i;\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\n                        if (this.cells[k][j]) {\n                            this.pushToChangeModels(this.cells[k][j]);\n                            newCheckPoint.push(this.cells[k][j]);\n                            this.cells[curRow][j] = this.cells[k][j];\n                            this.cells[k][j] = null;\n                            this.cells[curRow][j].setXY(j, curRow);\n                            this.cells[curRow][j].moveTo(cc.v2(j, curRow), this.curTime);\n                            curRow++;\n                        }\n                    }\n                    var count = 1;\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\n                        this.cells[k][j] = new CellModel();\n                        this.cells[k][j].init(this.getRandomCellType());\n                        this.cells[k][j].setStartXY(j, count + GRID_HEIGHT);\n                        this.cells[k][j].setXY(j, count + GRID_HEIGHT);\n                        this.cells[k][j].moveTo(cc.v2(j, k), this.curTime);\n                        count++;\n                        this.changeModels.push(this.cells[k][j]);\n                        newCheckPoint.push(this.cells[k][j]);\n                    }\n\n                }\n            }\n        }\n        this.curTime += ANITIME.TOUCH_MOVE + 0.3\n        return newCheckPoint;\n    }\n\n    pushToChangeModels(model) {\n        if (this.changeModels.indexOf(model) != -1) {\n            return;\n        }\n        this.changeModels.push(model);\n    }\n\n    cleanCmd() {\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                if (this.cells[i][j]) {\n                    this.cells[i][j].cmd = [];\n                }\n            }\n        }\n    }\n\n    exchangeCell(pos1, pos2) {\n        var tmpModel = this.cells[pos1.y][pos1.x];\n        this.cells[pos1.y][pos1.x] = this.cells[pos2.y][pos2.x];\n        this.cells[pos1.y][pos1.x].x = pos1.x;\n        this.cells[pos1.y][pos1.x].y = pos1.y;\n        this.cells[pos2.y][pos2.x] = tmpModel;\n        this.cells[pos2.y][pos2.x].x = pos2.x;\n        this.cells[pos2.y][pos2.x].y = pos2.y;\n    }\n    // 设置种类\n    // Todo 改成乱序算法\n    setCellTypeNum(num) {\n        console.log(\"num = \", num);\n        this.cellTypeNum = num;\n        this.cellCreateType = [];\n        let createTypeList = this.cellCreateType;\n        for (let i = 1; i <= CELL_BASENUM; i++) {\n            createTypeList.push(i);\n        }\n        for (let i = 0; i < createTypeList.length; i++) {\n            let index = Math.floor(Math.random() * (CELL_BASENUM - i)) + i;\n            createTypeList[i], createTypeList[index] = createTypeList[index], createTypeList[i]\n        }\n    }\n    // 随要生成一个类型\n    getRandomCellType() {\n        var index = Math.floor(Math.random() * this.cellTypeNum);\n        return this.cellCreateType[index];\n    }\n    // TODO bombModels去重\n    processBomb(bombModels, cycleCount) {\n        while (bombModels.length > 0) {\n            let newBombModel = [];\n            let bombTime = ANITIME.BOMB_DELAY;\n            bombModels.forEach(function (model) {\n                if (model.status == CELL_STATUS.LINE) {\n                    for (let i = 1; i <= GRID_WIDTH; i++) {\n                        if (this.cells[model.y][i]) {\n                            if (this.cells[model.y][i].status != CELL_STATUS.COMMON) {\n                                newBombModel.push(this.cells[model.y][i]);\n                            }\n                            this.crushCell(i, model.y, false, cycleCount);\n                        }\n                    }\n                    this.addRowBomb(this.curTime, cc.v2(model.x, model.y));\n                }\n                else if (model.status == CELL_STATUS.COLUMN) {\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        if (this.cells[i][model.x]) {\n                            if (this.cells[i][model.x].status != CELL_STATUS.COMMON) {\n                                newBombModel.push(this.cells[i][model.x]);\n                            }\n                            this.crushCell(model.x, i, false, cycleCount);\n                        }\n                    }\n                    this.addColBomb(this.curTime, cc.v2(model.x, model.y));\n                }\n                else if (model.status == CELL_STATUS.WRAP) {\n                    let x = model.x;\n                    let y = model.y;\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\n                            let delta = Math.abs(x - j) + Math.abs(y - i);\n                            if (this.cells[i][j] && delta <= 2) {\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                                    newBombModel.push(this.cells[i][j]);\n                                }\n                                this.crushCell(j, i, false, cycleCount);\n                            }\n                        }\n                    }\n                }\n                else if (model.status == CELL_STATUS.BIRD) {\n                    let crushType = model.type\n                    if (bombTime < ANITIME.BOMB_BIRD_DELAY) {\n                        bombTime = ANITIME.BOMB_BIRD_DELAY;\n                    }\n                    if (crushType == CELL_TYPE.BIRD) {\n                        crushType = this.getRandomCellType();\n                    }\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\n                            if (this.cells[i][j] && this.cells[i][j].type == crushType) {\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                                    newBombModel.push(this.cells[i][j]);\n                                }\n                                this.crushCell(j, i, true, cycleCount);\n                            }\n                        }\n                    }\n                    //this.crushCell(model.x, model.y);\n                }\n            }, this);\n            if (bombModels.length > 0) {\n                this.curTime += bombTime;\n            }\n            bombModels = newBombModel;\n        }\n    }\n    /**\n     * \n     * @param {开始播放的时间} playTime \n     * @param {*cell位置} pos \n     * @param {*第几次消除，用于播放音效} step \n     */\n    addCrushEffect(playTime, pos, step) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"crush\",\n            step\n        });\n    }\n\n    addRowBomb(playTime, pos) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"rowBomb\"\n        });\n    }\n\n    addColBomb(playTime, pos) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"colBomb\"\n        });\n    }\n\n    addWrapBomb(playTime, pos) {\n        // TODO\n    }\n    // cell消除逻辑\n    crushCell(x, y, needShake, step) {\n        let model = this.cells[y][x];\n        this.pushToChangeModels(model);\n        if (needShake) {\n            model.toShake(this.curTime)\n        }\n\n        let shakeTime = needShake ? ANITIME.DIE_SHAKE : 0;\n        model.toDie(this.curTime + shakeTime);\n        this.addCrushEffect(this.curTime + shakeTime, cc.v2(model.x, model.y), step);\n        this.cells[y][x] = null;\n    }\n\n}\n\n"]}